:root {
  --primary-color: #4a90e2;
  --success-color: #50c878;
  --warning-color: #ffae42;
  --error-color: #ff4d4d;
  --bg-color: #f5f7fb;
  --card-bg: #ffffff;
  --success-bg: rgba(80, 200, 120, 0.1);
}

* {
  margin: 0;
  padding: 0;
  box-sizing: border-box;
  font-family: 'Roboto', sans-serif;
}

body {
  background:  linear-gradient(135deg, #1bed5d 0%, #6d06c1 100%) ;
  background-size: cover;
  color: #333;
  line-height: 1.6;
  padding: 20px;
}

.container {
  max-width: 800px;
  margin: 0 auto;
}

.header {
  text-align: center;
  margin-bottom: 2rem;
  padding: 2rem 0;
}

.header h1 {
  font-size: 2.5rem;
  color: var(--primary-color);
  margin-bottom: 0.5rem;
}

.header .subtitle {
  color: #666;
  font-size: 1.1rem;
}

.input-card {
  background: var(--card-bg);
  border-radius: 12px;
  padding: 1.5rem;
  margin-bottom: 1.5rem;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
}

.input-group {
  display: flex;
  gap: 10px;
}

.input-field {
  flex: 1;
  padding: 12px 18px;
  border: 2px solid #e0e0e0;
  border-radius: 8px;
  font-size: 16px;
  transition: border-color 0.3s ease;
}

.input-field:focus {
  outline: none;
  border-color: var(--primary-color);
  box-shadow: 0 0 0 3px rgba(74, 144, 226, 0.1);
}

.submit-btn {
  padding: 12px 24px;
  background: var(--primary-color);
  color: white;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  font-size: 16px;
  transition: transform 0.2s, background 0.3s;
  display: flex;
  align-items: center;
  gap: 8px;
}

.submit-btn:hover {
  background: #357abd;
  transform: translateY(-1px);
}

.controls {
  display: flex;
  align-items: center;
  gap: 20px;
  margin-bottom: 1.5rem;
}

.refresh-btn {
  padding: 10px 20px;
  background: #f0f0f0;
  border: none;
  border-radius: 8px;
  cursor: pointer;
  transition: background 0.3s;
  display: flex;
  align-items: center;
  gap: 8px;
}

.refresh-btn:hover {
  background: #e0e0e0;
}

.switch {
  position: relative;
  display: inline-block;
  width: 48px;
  height: 24px;
}

.switch input {
  opacity: 0;
  width: 0;
  height: 0;
}

.slider {
  position: absolute;
  cursor: pointer;
  top: 0;
  left: 0;
  right: 0;
  bottom: 0;
  background-color: #ccc;
  transition: .4s;
  border-radius: 24px;
}

.slider:before {
  position: absolute;
  content: "";
  height: 18px;
  width: 18px;
  left: 3px;
  bottom: 3px;
  background-color: white;
  transition: .4s;
  border-radius: 50%;
}

input:checked + .slider {
  background-color: var(--primary-color);
}

input:checked + .slider:before {
  transform: translateX(24px);
}

.switch-label {
  margin-left: 10px;
  font-size: 14px;
}

.expressions-card {
  background: var(--card-bg);
  border-radius: 12px;
  padding: 1.5rem;
  box-shadow: 0 4px 6px rgba(0, 0, 0, 0.05);
}

.expressions-card h2 {
  font-size: 1.4rem;
  margin-bottom: 1rem;
  color: #444;
  display: flex;
  align-items: center;
  gap: 8px;
}

.expressions-list {
  display: flex;
  flex-direction: column;
  gap: 12px;
}

.expression-item {
  padding: 16px;
  background: #f8f9ff;
  border-radius: 8px;
  display: flex;
  justify-content: space-between;
  align-items: center;
  transition: transform 0.2s;
  border-left: 4px solid transparent;
}

.expression-item:hover {
  transform: translateX(5px);
  box-shadow: 2px 2px 8px rgba(0, 0, 0, 0.05);
}

.status-pending {
  border-left-color: var(--warning-color);
  color: var(--warning-color);
}

.status-processing {
  border-left-color: var(--primary-color);
  color: var(--primary-color);
}

.status-complete {
  border-left-color: var(--success-color);
  //background-color: var(--success-bg);
  color: var(--success-color);
}

.status-error {
  border-left-color: var(--error-color);
  color: var(--error-color);
}

.expression-info {
  flex: 1;
}

.expression-id {
  font-size: 0.8rem;
  color: #666;
}

@media (max-width: 600px) {
  .input-group {
    flex-direction: column;
  }

  .submit-btn {
    justify-content: center;
  }

  .controls {
    flex-direction: column;
    align-items: stretch;
  }
}

@keyframes fadeInSuccess {
   from {
     background-color: transparent;
   }
   to {
     background-color: var(--success-bg);
   }
 }

.status-completed {
  animation: fadeInSuccess 0.5s ease-out;
}