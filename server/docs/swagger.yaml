basePath: /api/v1
definitions:
  models.CalculateRequest:
    properties:
      expression:
        example: 2+2*2
        type: string
    type: object
  models.CalculateResponse:
    properties:
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
    type: object
  models.ErrResponse:
    properties:
      message:
        type: string
    type: object
  models.Expression:
    properties:
      expression:
        example: 2+2*2
        type: string
      id:
        example: 550e8400-e29b-41d4-a716-446655440000
        type: string
      result:
        example: "6"
        type: string
      status:
        example: completed
        type: string
    type: object
  models.ExpressionsResponse:
    properties:
      expressions:
        items:
          $ref: '#/definitions/models.Expression'
        type: array
    type: object
host: localhost:8080
info:
  contact:
    email: support@calculator.ru
    name: API Support
    url: http://localhost:8080
  description: Distributed arithmetic expressions calculation system
  title: Web Calculator API
  version: "1.0"
paths:
  /calculate:
    post:
      consumes:
      - application/json
      description: Add new arithmetic expression for calculation
      parameters:
      - description: Expression data
        in: body
        name: input
        required: true
        schema:
          $ref: '#/definitions/models.CalculateRequest'
      produces:
      - application/json
      responses:
        "201":
          description: Created
          schema:
            $ref: '#/definitions/models.CalculateResponse'
        "422":
          description: Unprocessable Entity
          schema:
            $ref: '#/definitions/models.ErrResponse'
      summary: Create new expression
      tags:
      - expressions
  /expressions:
    get:
      description: Get list of all expressions with their statuses
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.ExpressionsResponse'
      summary: Get all expressions
      tags:
      - expressions
  /expressions/{id}:
    get:
      description: Get expression details by ID
      parameters:
      - description: Expression ID
        in: path
        name: id
        required: true
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/models.Expression'
        "404":
          description: Not Found
          schema:
            $ref: '#/definitions/models.ErrResponse'
      summary: Get expression by ID
      tags:
      - expressions
schemes:
- http
swagger: "2.0"
